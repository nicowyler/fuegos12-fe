/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FaqImport } from './routes/faq'
import { Route as BasesImport } from './routes/bases'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthLayoutImport } from './routes/_authLayout'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedDashboardLayoutImport } from './routes/_authenticated/_dashboardLayout'
import { Route as AuthLayoutRegistrationImport } from './routes/_authLayout/registration'
import { Route as AuthLayoutPasswordResetImport } from './routes/_authLayout/passwordReset'
import { Route as AuthLayoutLoginImport } from './routes/_authLayout/login'
import { Route as AuthLayoutForgotPasswordImport } from './routes/_authLayout/forgotPassword'
import { Route as AuthenticatedDashboardLayoutDashboardImport } from './routes/_authenticated/_dashboardLayout/dashboard'
import { Route as AuthenticatedDashboardLayoutMercadoPagoSuccessImport } from './routes/_authenticated/_dashboardLayout/mercado-pago/success'
import { Route as AuthenticatedDashboardLayoutMercadoPagoFailureImport } from './routes/_authenticated/_dashboardLayout/mercado-pago/failure'

// Create Virtual Routes

const AuthenticatedDashboardLayoutTermsLazyImport = createFileRoute(
  '/_authenticated/_dashboardLayout/terms',
)()
const AuthenticatedDashboardLayoutMisComprasLazyImport = createFileRoute(
  '/_authenticated/_dashboardLayout/mis-compras',
)()
const AuthenticatedDashboardLayoutContactoLazyImport = createFileRoute(
  '/_authenticated/_dashboardLayout/contacto',
)()
const AuthenticatedDashboardLayoutComoFuncionaLazyImport = createFileRoute(
  '/_authenticated/_dashboardLayout/como-funciona',
)()

// Create/Update Routes

const FaqRoute = FaqImport.update({
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const BasesRoute = BasesImport.update({
  path: '/bases',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardLayoutRoute =
  AuthenticatedDashboardLayoutImport.update({
    id: '/_dashboardLayout',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthLayoutRegistrationRoute = AuthLayoutRegistrationImport.update({
  path: '/registration',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutPasswordResetRoute = AuthLayoutPasswordResetImport.update({
  path: '/passwordReset',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutForgotPasswordRoute = AuthLayoutForgotPasswordImport.update({
  path: '/forgotPassword',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthenticatedDashboardLayoutTermsLazyRoute =
  AuthenticatedDashboardLayoutTermsLazyImport.update({
    path: '/terms',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/_dashboardLayout/terms.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardLayoutMisComprasLazyRoute =
  AuthenticatedDashboardLayoutMisComprasLazyImport.update({
    path: '/mis-compras',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/_dashboardLayout/mis-compras.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardLayoutContactoLazyRoute =
  AuthenticatedDashboardLayoutContactoLazyImport.update({
    path: '/contacto',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/_dashboardLayout/contacto.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardLayoutComoFuncionaLazyRoute =
  AuthenticatedDashboardLayoutComoFuncionaLazyImport.update({
    path: '/como-funciona',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/_dashboardLayout/como-funciona.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedDashboardLayoutDashboardRoute =
  AuthenticatedDashboardLayoutDashboardImport.update({
    path: '/dashboard',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any)

const AuthenticatedDashboardLayoutMercadoPagoSuccessRoute =
  AuthenticatedDashboardLayoutMercadoPagoSuccessImport.update({
    path: '/mercado-pago/success',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any)

const AuthenticatedDashboardLayoutMercadoPagoFailureRoute =
  AuthenticatedDashboardLayoutMercadoPagoFailureImport.update({
    path: '/mercado-pago/failure',
    getParentRoute: () => AuthenticatedDashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/bases': {
      id: '/bases'
      path: '/bases'
      fullPath: '/bases'
      preLoaderRoute: typeof BasesImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/_authLayout/forgotPassword': {
      id: '/_authLayout/forgotPassword'
      path: '/forgotPassword'
      fullPath: '/forgotPassword'
      preLoaderRoute: typeof AuthLayoutForgotPasswordImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/login': {
      id: '/_authLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/passwordReset': {
      id: '/_authLayout/passwordReset'
      path: '/passwordReset'
      fullPath: '/passwordReset'
      preLoaderRoute: typeof AuthLayoutPasswordResetImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authLayout/registration': {
      id: '/_authLayout/registration'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof AuthLayoutRegistrationImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_authenticated/_dashboardLayout': {
      id: '/_authenticated/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_dashboardLayout/dashboard': {
      id: '/_authenticated/_dashboardLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutDashboardImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/como-funciona': {
      id: '/_authenticated/_dashboardLayout/como-funciona'
      path: '/como-funciona'
      fullPath: '/como-funciona'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutComoFuncionaLazyImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/contacto': {
      id: '/_authenticated/_dashboardLayout/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutContactoLazyImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/mis-compras': {
      id: '/_authenticated/_dashboardLayout/mis-compras'
      path: '/mis-compras'
      fullPath: '/mis-compras'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutMisComprasLazyImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/terms': {
      id: '/_authenticated/_dashboardLayout/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutTermsLazyImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/mercado-pago/failure': {
      id: '/_authenticated/_dashboardLayout/mercado-pago/failure'
      path: '/mercado-pago/failure'
      fullPath: '/mercado-pago/failure'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutMercadoPagoFailureImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
    '/_authenticated/_dashboardLayout/mercado-pago/success': {
      id: '/_authenticated/_dashboardLayout/mercado-pago/success'
      path: '/mercado-pago/success'
      fullPath: '/mercado-pago/success'
      preLoaderRoute: typeof AuthenticatedDashboardLayoutMercadoPagoSuccessImport
      parentRoute: typeof AuthenticatedDashboardLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthLayoutRoute: AuthLayoutRoute.addChildren({
    AuthLayoutForgotPasswordRoute,
    AuthLayoutLoginRoute,
    AuthLayoutPasswordResetRoute,
    AuthLayoutRegistrationRoute,
  }),
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedDashboardLayoutRoute:
      AuthenticatedDashboardLayoutRoute.addChildren({
        AuthenticatedDashboardLayoutDashboardRoute,
        AuthenticatedDashboardLayoutComoFuncionaLazyRoute,
        AuthenticatedDashboardLayoutContactoLazyRoute,
        AuthenticatedDashboardLayoutMisComprasLazyRoute,
        AuthenticatedDashboardLayoutTermsLazyRoute,
        AuthenticatedDashboardLayoutMercadoPagoFailureRoute,
        AuthenticatedDashboardLayoutMercadoPagoSuccessRoute,
      }),
  }),
  BasesRoute,
  FaqRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authLayout",
        "/_authenticated",
        "/bases",
        "/faq"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authLayout": {
      "filePath": "_authLayout.tsx",
      "children": [
        "/_authLayout/forgotPassword",
        "/_authLayout/login",
        "/_authLayout/passwordReset",
        "/_authLayout/registration"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_dashboardLayout"
      ]
    },
    "/bases": {
      "filePath": "bases.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/_authLayout/forgotPassword": {
      "filePath": "_authLayout/forgotPassword.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/login": {
      "filePath": "_authLayout/login.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/passwordReset": {
      "filePath": "_authLayout/passwordReset.tsx",
      "parent": "/_authLayout"
    },
    "/_authLayout/registration": {
      "filePath": "_authLayout/registration.tsx",
      "parent": "/_authLayout"
    },
    "/_authenticated/_dashboardLayout": {
      "filePath": "_authenticated/_dashboardLayout.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboardLayout/dashboard",
        "/_authenticated/_dashboardLayout/como-funciona",
        "/_authenticated/_dashboardLayout/contacto",
        "/_authenticated/_dashboardLayout/mis-compras",
        "/_authenticated/_dashboardLayout/terms",
        "/_authenticated/_dashboardLayout/mercado-pago/failure",
        "/_authenticated/_dashboardLayout/mercado-pago/success"
      ]
    },
    "/_authenticated/_dashboardLayout/dashboard": {
      "filePath": "_authenticated/_dashboardLayout/dashboard.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/como-funciona": {
      "filePath": "_authenticated/_dashboardLayout/como-funciona.lazy.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/contacto": {
      "filePath": "_authenticated/_dashboardLayout/contacto.lazy.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/mis-compras": {
      "filePath": "_authenticated/_dashboardLayout/mis-compras.lazy.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/terms": {
      "filePath": "_authenticated/_dashboardLayout/terms.lazy.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/mercado-pago/failure": {
      "filePath": "_authenticated/_dashboardLayout/mercado-pago/failure.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    },
    "/_authenticated/_dashboardLayout/mercado-pago/success": {
      "filePath": "_authenticated/_dashboardLayout/mercado-pago/success.tsx",
      "parent": "/_authenticated/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
